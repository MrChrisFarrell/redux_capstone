import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import { fetchToken } from './loginAPI';

const initialState = {
    token: {},
    status: 'idle',
  };

export const loginAsync = createAsyncThunk(
    'login/fetchToken',
    async (username, password) => {
    const response = await fetchToken(username, password);
    console.log(response.data);
    // The value we return becomes the `fulfilled` action payload
    return response.data;
    }
);

export const loginSlice = createSlice({
    name: 'login',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {},
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
      builder
        .addCase(loginAsync.pending, (state) => {
          state.status = 'loading';
        })
        .addCase(loginAsync.fulfilled, (state, action) => {
          state.status = 'idle';
          state.token = action.payload;
        });
    },
  });
  
export const { } = loginSlice.actions;

export const selectToken = (state) => state.token.value;

export default loginSlice.reducer;